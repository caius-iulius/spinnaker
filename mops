use Core

data Vector a = Vector (List a)
data Matrix a = Matrix (List (Vector a))

def vectorplus = \Vector as, Vector bs -> zipWith (+) as bs
def vectorscalar = \Vector as, Vector bs -> foldl (+) 0 $ zipWith (*) as bs

def transpose = \Matrix vecs ->
    put map (\Vector v->v) vecs
    | (Cons [] _) -> Matrix []
    | unboxed -> Matrix $ Cons (Vector $ map head unboxed) ((\Matrix m -> m) $ transpose $ Matrix $ map (Vector <| tail) unboxed)

def main = transpose $ Matrix [
        Vector [0, 1, 2],
        Vector [3, 4, 5]
    ]
