use Core

def writeDigit = \i {48 + i}
def writeNonNeg = \i {
    put i < 10
    | True -> [writeDigit i]
    | _ ->
        let div10 = i/10 ->
        let prev = writeNonNeg div10 ->
        prev ++ [writeDigit $ i - div10*10]
}
def writeInt = \i {
    put i < 0
    | True -> Cons 45 (writeNonNeg (0-i))
    | _ -> writeNonNeg i
}

def bottles = \n {
    put n
    | 0 -> [110,111,32,109,111,114,101,32,98,111,116,116,108,101,115]
    | 1 -> [49,32,98,111,116,116,108,101]
    | _ -> writeInt n ++ [32,98,111,116,116,108,101,115]
}

def verse = \n {
    put n
    | 0 -> [78,111,32,109,111,114,101,32,98,111,116,116,108,101,115,32,111,102,32,98,101,101,114,32,111,110,32,116,104,101,32,119,97,108,108,44,32,110,111,32,109,111,114,101,32,98,111,116,116,108,101,115,32,111,102,32,98,101,101,114,46,10,71,111,32,116,111,32,116,104,101,32,115,116,111,114,101,44,32,98,117,121,32,115,111,109,101,32,109,111,114,101,44,32,57,57,32,98,111,116,116,108,101,115,32,111,102,32,98,101,101,114,32,111,110,32,116,104,101,32,119,97,108,108,46]
    | _ -> bottles n
    ++ [32,111,102,32,98,101,101,114,32,111,110,32,116,104,101,32,119,97,108,108,44,32]
    ++ bottles n
    ++ [32,111,102,32,98,101,101,114,46,10,84,97,107,101,32,111,110,101,32,100,111,119,110,44,32,112,97,115,115,32,105,116,32,97,114,111,117,110,100,44,32]
    ++ bottles (n - 1)
    ++ [32,111,102,32,98,101,101,114,32,111,110,32,116,104,101,32,119,97,108,108,46,10]
}

def main = let _ = map (putStrLn <| verse) $ reverse [] $ 0..100 -> ()
