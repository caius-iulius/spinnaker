use Core

data MyChar = MyCharCode Int

rel pub MyShow a =
    myshow : a -> List Int

inst forall a b. {MyShow a, MyShow b} => MyShow (a, b) {
    def myshow = \(a, b) -> "(" ++ myshow a ++ ", " ++ myshow b ++ ")"
}

inst MyShow Int {
    def myshow = Utility.showInt
}

def escapeChar = \c -> put c
    | '\n' -> "\\n"
    | '\\' -> "\\\\"
    | '\'' -> "\\'"
    | '"' -> "\\\""
    | _ -> [c]

inst MyShow MyChar {
    def myshow = \MyCharCode i -> ['\'' | escapeChar i ++ "'"]
}

inst MyShow (List MyChar) {
    def myshow = \l -> ['"' | foldl (\s, MyCharCode i -> s ++ escapeChar i) [] l ++ "\""]
}

inst forall a. {MyShow a} => MyShow (List a) {
    def myshow = Utility.showList myshow
}

def main =
    let s = "Ciao\\\nMondo!"
    -> let _ = putStrLn (myshow (10, map MyCharCode s))
    -> let _ = putStrLn s
    -> putStrLn $ myshow [[0, 1, 2], [3, 4, 5], [6, 7, 8, 9]]

