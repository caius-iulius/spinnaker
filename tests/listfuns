use Core

def head = \Cons x xs {x}
def tail = \Cons x xs {xs}
def last = \l {
    put l
    | Cons x Nil -> x
    | Cons x xs -> last xs
}

def map = \f, l {
    put l
    | Nil -> Nil
    | Cons x xs -> Cons (f x) (map f xs)
}

def foldl = \f, s, l {
    put l
    | Nil -> s
    | Cons x xs -> foldl f (f s x) xs
}

def foldr = \f, s, l {
    put l
    | Nil -> s
    | Cons x xs -> f x (foldr f s xs)
}
