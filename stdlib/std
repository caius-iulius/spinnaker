use pub Core

mod pub Monad "stdlib/monad"

mod pub List "stdlib/list"

mod pub Maybe "stdlib/maybe"

def pub max : forall a. {Ord a} => a -> a -> a
    = \a, b -> put a > b
    | True -> a
    | False -> b

def innerdotdot = \from, to ->
    put from >= to
    | True -> Nil
    | _ -> toEnum from :: innerdotdot (from+1) to
def pub (..) : forall a. {Enum a} => a -> a -> List a
    = \from, to ->
        innerdotdot (fromEnum from) (fromEnum to)
def pub (..=) : forall a. {Enum a} => a -> a -> List a
    = \from, to ->
        innerdotdot (fromEnum from) (fromEnum to + 1)
