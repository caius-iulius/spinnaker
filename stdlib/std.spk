use pub Core

mod pub Monad "monad.spk"

mod pub List "list.spk"

mod pub Maybe "maybe.spk"

mod pub Text "text.spk"

mod pub Debug "debug.spk"

def pub max : forall a. {Ord a} => a -> a -> a
    = \a, b -> if a > b then a else b
def pub min : forall a. {Ord a} => a -> a -> a
    = \a, b -> if a < b then a else b

def innerdotdot = \acc, from, to ->
    if from > to then acc
    else innerdotdot (toEnum to :: acc) from (to - 1)
def pub (..) : forall a. {Enum a} => a -> a -> [a]
    = \from, to ->
        innerdotdot [] (fromEnum from) (fromEnum to - 1)
def pub (..=) : forall a. {Enum a} => a -> a -> [a]
    = \from, to ->
        innerdotdot [] (fromEnum from) (fromEnum to)

#TODO sposta in debug
def pub todo : forall a. a
    = error "TODO"
