use Std

data Iota
    = ILeaf
    | INode Iota Iota

inst Show Iota {
    def show =
        \ ILeaf -> "Î¹"
        | INode i0 i1 -> "(" ++ show i0 ++ show i1 ++ ")"
}

def iota_parse =
    \ ['1'|s] -> (ILeaf, s)
    | ['0'|s] ->
        let (i0, s') = iota_parse s ->
        let (i1, s'') = iota_parse s' ->
        (INode i0 i1, s'')

def jot_revcomp =
    \ [] -> "I"
    | ['0'|s] -> "((" ++ jot_revcomp s ++ "S)K)"
    | ['1'|s] -> "(S(K" ++ jot_revcomp s ++ "))"

def jot_comp = reverse |> jot_revcomp

def main =
    _ <- putStrLn $ "Parsed Iota: " ++ show $ map (iota_parse |> fst) ["0011011", "0101011"];
    putStrLn $ "Jot to SK: " ++ show $ map jot_comp ["11100", "11111000"]
